name: Build and Deploy Keycloak Auth Service to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-image:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log into Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push Keycloak image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

  deploy-to-ec2:
    name: Set enviroment variables for all services and deploy services to ec2
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Make DB envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          file_name: .env.db
          fail_on_empty: false

      - name: Make Keycloak envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_KC_DB: "postgres"
          envkey_KC_DB_USERNAME: ${{ secrets.POSTGRES_USER }}
          envkey_KC_DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_KC_DB_SCHEMA: "public"
          envkey_KC_DB_URL_DATABASE: ${{ secrets.POSTGRES_DB }}
          envkey_KC_DB_URL_HOST: "db-server"
          envkey_KC_DB_URL_PORT: ${{ secrets.KEYCLOAK_DB_PORT }}
          envkey_KEYCLOAK_ADMIN: ${{ secrets.KEYCLOAK_ADMIN }}
          envkey_KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
          envkey_KC_MASTER_CLIENT_SECRET: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_SECRET }}
          envkey_KC_SELLAF_API_CLIENT_SECRET: ${{ secrets.KC_SELLAF_API_CLIENT_SECRET }}
          envkey_KC_PROXY: ${{ secrets.KC_PROXY }}
          envkey_KC_HEALTH_ENABLED: ${{ secrets.KC_HEALTH_ENABLED }}
          envkey_KC_METRICS_ENABLED: ${{ secrets.KC_METRICS_ENABLED }}
          envkey_KC_FEATURES: ${{ secrets.KC_FEATURES }}
          envkey_KC_HOSTNAME_STRICT: ${{ secrets.KC_HOSTNAME_STRICT }}
          envkey_KC_HTTP_ENABLED: ${{ secrets.KC_HTTP_ENABLED }}
          envkey_KC_HOSTNAME: ${{ secrets.KC_HOSTNAME }}
          envkey_IMAGE_VERSION: ${{ github.sha }}
          file_name: .env
          fail_on_empty: false

      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v3.0.0
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 022024849961.dkr.ecr.us-east-2.amazonaws.com
            docker pull 022024849961.dkr.ecr.us-east-2.amazonaws.com/keycloak-auth-server:${{ github.sha }}
            IMAGE_VERSION=${{ github.sha }} docker-compose -f docker-compose.prod.yml up -d
